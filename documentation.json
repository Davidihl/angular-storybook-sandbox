{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-458b3052af059ebc7243aa512313516a99df8c09530ca7cff8cbea406169523288272f264f12b69a2fe39321b7e37230d6d27b4210c4910cfd6e808b4faf4398",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-storybook-sandbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "MatSlideToggleModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterOutlet,\r\n    MatSlideToggleModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-storybook-sandbox';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>it works</p>\r\n<button mat-icon-button><mat-icon>more_vert</mat-icon></button>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes), provideClientHydration(), provideAnimations()]\r\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "Config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n    <button\r\n        ${args['variant'] === 'Raised' ? 'mat-raised-button' : ''}\r\n        ${args['variant'] === 'Flat' ? 'mat-flat-button' : ''}\r\n        ${args['variant'] === 'Stroked' ? 'mat-stroked-button' : ''}\r\n        ${args['variant'] === 'Basic' ? 'mat-button' : ''}\r\n        ${args['color'] ? 'color={{color}}' : ''}\r\n        ${args['disabled'] ? 'disabled' : ''}\r\n\r\n    >\r\n        {{label}}\r\n    </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "Config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/FAB-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n        ${args['variant'] === 'FAB' ? 'mat-fab' : ''}\r\n        ${args['variant'] === 'Mini FAB' ? 'mat-mini-fab' : ''}\r\n        ${args['color'] ? 'color={{color}}' : ''}\r\n        ${args['disabled'] ? 'disabled' : ''}\r\n\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "FAB",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/FAB-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n      mat-fab\r\n\r\n      ${args['color'] ? 'color={{color}}' : ''}\r\n      ${args['disabled'] ? 'disabled' : ''}\r\n\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "Flat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-flat-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Icon-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n      mat-icon-button\r\n      ${args['color'] ? 'color={{color}}' : ''}\r\n      ${args['disabled'] ? 'disabled' : ''}\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  component: MatButton,\r\n  title: 'Components/Buttons/Button',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatButtonModule],\r\n    }),\r\n  ],\r\n  args: {\r\n    label: 'Button',\r\n    color: 'primary',\r\n    disabled: false,\r\n    variant: 'Raised',\r\n  },\r\n  argTypes: {\r\n    label: {\r\n      description: 'Change the name of the button',\r\n    },\r\n    color: {\r\n      description: 'Choose color based on the theme',\r\n      options: [null, 'primary', 'accent', 'warn'],\r\n      control: { type: 'select' },\r\n    },\r\n    disabled: {\r\n      description: 'Deactivate the button',\r\n    },\r\n    variant: {\r\n      table: {\r\n        disable: true,\r\n      },\r\n      description: 'Choose color based on the theme',\r\n      options: ['Basic', 'Flat', 'Raised', 'Stroked'],\r\n      control: { type: 'select' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/FAB-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  component: MatButton,\r\n  title: 'Components/Buttons/FAB Button',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatButtonModule, MatIconModule],\r\n    }),\r\n  ],\r\n  args: {\r\n    icon: 'home',\r\n    color: 'primary',\r\n    disabled: false,\r\n    variant: 'FAB',\r\n  },\r\n  argTypes: {\r\n    icon: {\r\n      description: 'https://fonts.google.com/icons (e.g home)',\r\n    },\r\n    color: {\r\n      description: 'Choose color based on the theme',\r\n      options: [null, 'primary', 'accent', 'warn'],\r\n      control: { type: 'select' },\r\n    },\r\n    disabled: {\r\n      description: 'Deactivate the button',\r\n    },\r\n    variant: {\r\n      table: {\r\n        disable: true,\r\n      },\r\n      description: 'Choose color based on the theme',\r\n      options: ['FAB', 'Mini FAB'],\r\n      control: { type: 'select' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Icon-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\r\n  component: MatButton,\r\n  title: 'Components/Buttons/Icon Button',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatButtonModule, MatIconModule],\r\n    }),\r\n  ],\r\n  args: {\r\n    icon: 'home',\r\n    color: '',\r\n    disabled: false,\r\n    variant: 'FAB',\r\n  },\r\n  argTypes: {\r\n    icon: {\r\n      description: 'https://fonts.google.com/icons (e.g home)',\r\n    },\r\n    color: {\r\n      description: 'Choose color based on the theme',\r\n      options: [null, 'primary', 'accent', 'warn'],\r\n      control: { type: 'select' },\r\n    },\r\n    disabled: {\r\n      description: 'Deactivate the button',\r\n    },\r\n    variant: {\r\n      table: {\r\n        disable: true,\r\n      },\r\n      description: 'Choose color based on the theme',\r\n      options: ['FAB', 'Mini FAB'],\r\n      control: { type: 'select' },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "MiniFAB",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/FAB-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n      mat-mini-fab\r\n      ${args['color'] ? 'color={{color}}' : ''}\r\n      ${args['disabled'] ? 'disabled' : ''}\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    docs: {\r\n      theme: themes.light,\r\n      // toc: {\r\n      //   contentsSelector: '.sbdocs-content',\r\n      //   headingSelector: 'h1,h2,h3',\r\n      //   ignoreSelector: '#primary',\r\n      //   disable: false,\r\n      //   unsafeTocbotOptions: {\r\n      //     orderedList: false,\r\n      //   },\r\n      // },\r\n    },\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Raised",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-raised-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
            },
            {
                "name": "Stroked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-stroked-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "src/stories/Buttons/Buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "src/stories/Buttons/FAB-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "src/stories/Buttons/Icon-Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes), provideClientHydration(), provideAnimations()]\r\n}"
                }
            ],
            "src/stories/Buttons/Buttons.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "Config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n    <button\r\n        ${args['variant'] === 'Raised' ? 'mat-raised-button' : ''}\r\n        ${args['variant'] === 'Flat' ? 'mat-flat-button' : ''}\r\n        ${args['variant'] === 'Stroked' ? 'mat-stroked-button' : ''}\r\n        ${args['variant'] === 'Basic' ? 'mat-button' : ''}\r\n        ${args['color'] ? 'color={{color}}' : ''}\r\n        ${args['disabled'] ? 'disabled' : ''}\r\n\r\n    >\r\n        {{label}}\r\n    </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "Flat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-flat-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  component: MatButton,\r\n  title: 'Components/Buttons/Button',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatButtonModule],\r\n    }),\r\n  ],\r\n  args: {\r\n    label: 'Button',\r\n    color: 'primary',\r\n    disabled: false,\r\n    variant: 'Raised',\r\n  },\r\n  argTypes: {\r\n    label: {\r\n      description: 'Change the name of the button',\r\n    },\r\n    color: {\r\n      description: 'Choose color based on the theme',\r\n      options: [null, 'primary', 'accent', 'warn'],\r\n      control: { type: 'select' },\r\n    },\r\n    disabled: {\r\n      description: 'Deactivate the button',\r\n    },\r\n    variant: {\r\n      table: {\r\n        disable: true,\r\n      },\r\n      description: 'Choose color based on the theme',\r\n      options: ['Basic', 'Flat', 'Raised', 'Stroked'],\r\n      control: { type: 'select' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Raised",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-raised-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "Stroked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n\r\n      <button\r\n          mat-stroked-button\r\n          ${args['color'] ? 'color={{color}}' : ''}\r\n          ${args['disabled'] ? 'disabled' : ''}\r\n      >\r\n          {{label}}\r\n      </button>`,\r\n  }),\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
                }
            ],
            "src/stories/Buttons/FAB-Button.stories.ts": [
                {
                    "name": "Config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/FAB-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n        ${args['variant'] === 'FAB' ? 'mat-fab' : ''}\r\n        ${args['variant'] === 'Mini FAB' ? 'mat-mini-fab' : ''}\r\n        ${args['color'] ? 'color={{color}}' : ''}\r\n        ${args['disabled'] ? 'disabled' : ''}\r\n\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "FAB",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/FAB-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n      mat-fab\r\n\r\n      ${args['color'] ? 'color={{color}}' : ''}\r\n      ${args['disabled'] ? 'disabled' : ''}\r\n\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/FAB-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  component: MatButton,\r\n  title: 'Components/Buttons/FAB Button',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatButtonModule, MatIconModule],\r\n    }),\r\n  ],\r\n  args: {\r\n    icon: 'home',\r\n    color: 'primary',\r\n    disabled: false,\r\n    variant: 'FAB',\r\n  },\r\n  argTypes: {\r\n    icon: {\r\n      description: 'https://fonts.google.com/icons (e.g home)',\r\n    },\r\n    color: {\r\n      description: 'Choose color based on the theme',\r\n      options: [null, 'primary', 'accent', 'warn'],\r\n      control: { type: 'select' },\r\n    },\r\n    disabled: {\r\n      description: 'Deactivate the button',\r\n    },\r\n    variant: {\r\n      table: {\r\n        disable: true,\r\n      },\r\n      description: 'Choose color based on the theme',\r\n      options: ['FAB', 'Mini FAB'],\r\n      control: { type: 'select' },\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "MiniFAB",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/FAB-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n      mat-mini-fab\r\n      ${args['color'] ? 'color={{color}}' : ''}\r\n      ${args['disabled'] ? 'disabled' : ''}\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
                }
            ],
            "src/stories/Buttons/Icon-Button.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Icon-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <!-- import {MatButtonModule} from '@angular/material/button'; -->\r\n    <!-- import {MatIconModule} from '@angular/material/icon'; -->\r\n\r\n    <button\r\n      mat-icon-button\r\n      ${args['color'] ? 'color={{color}}' : ''}\r\n      ${args['disabled'] ? 'disabled' : ''}\r\n    >\r\n        <mat-icon>{{icon}}</mat-icon>\r\n    </button>`,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Buttons/Icon-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\r\n  component: MatButton,\r\n  title: 'Components/Buttons/Icon Button',\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatButtonModule, MatIconModule],\r\n    }),\r\n  ],\r\n  args: {\r\n    icon: 'home',\r\n    color: '',\r\n    disabled: false,\r\n    variant: 'FAB',\r\n  },\r\n  argTypes: {\r\n    icon: {\r\n      description: 'https://fonts.google.com/icons (e.g home)',\r\n    },\r\n    color: {\r\n      description: 'Choose color based on the theme',\r\n      options: [null, 'primary', 'accent', 'warn'],\r\n      control: { type: 'select' },\r\n    },\r\n    disabled: {\r\n      description: 'Deactivate the button',\r\n    },\r\n    variant: {\r\n      table: {\r\n        disable: true,\r\n      },\r\n      description: 'Choose color based on the theme',\r\n      options: ['FAB', 'Mini FAB'],\r\n      control: { type: 'select' },\r\n    },\r\n  },\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    docs: {\r\n      theme: themes.light,\r\n      // toc: {\r\n      //   contentsSelector: '.sbdocs-content',\r\n      //   headingSelector: 'h1,h2,h3',\r\n      //   ignoreSelector: '#primary',\r\n      //   disable: false,\r\n      //   unsafeTocbotOptions: {\r\n      //     orderedList: false,\r\n      //   },\r\n      // },\r\n    },\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/Buttons/Buttons.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "src/stories/Buttons/Buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/Buttons/FAB-Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "src/stories/Buttons/FAB-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/Buttons/Icon-Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "src/stories/Buttons/Icon-Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Raised",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stroked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/FAB-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/FAB-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FAB",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/FAB-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/FAB-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MiniFAB",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Buttons/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}